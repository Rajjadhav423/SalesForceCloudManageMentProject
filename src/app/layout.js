// // ‚ùå NO 'use client' here!
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";
// import SessionWrapper from "../components/SessionWrapper"; // <--- Use client wrapper

// import { ThemeProvider } from "next-themes";
// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({ children }) {
//   return (
//     <html lang="en">
//       <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
//         <SessionWrapper>
//           {children}
//         </SessionWrapper>
//       </body>
//     </html>
//   );
// }


import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Providers from "../components/Providers";
import {Toaster} from '../components/ui/sonner'
import Footer from '../components/Footer';
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {
  const isClient = typeof window !== 'undefined';

  // Avoid hydration issues: conditionally apply only after mount (via useEffect or a wrapper)
  const htmlClass = "light"; // OR read from cookies/localStorage and set this during SSR

  return (
    <html lang="en" className={htmlClass} style={{ colorScheme: "light" }}>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <Providers>{children}</Providers>
            {/* <Footer /> */}
        <Toaster/>
      </body>
    </html>
  );
}
